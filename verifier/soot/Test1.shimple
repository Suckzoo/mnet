public class Test1 extends java.lang.Object
{
/*Test1.java*/
    static final boolean $assertionsDisabled;

/*2*/
    public void <init>()
    {
        Test1 l0;

        l0 := @this: Test1;

        specialinvoke l0.<java.lang.Object: void <init>()>();
/*3*/

        return;
/*3*/
    }

/*4*/
    public void testMe(int, int, int)
    {
        Test1 l0;
        int l1, l2, l3, l4, l5, l6, $i0;
        boolean $z0;
        java.lang.AssertionError $r0;

        l0 := @this: Test1;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 = l1 * l1;
/*5*/

        l5 = l2 * l2;
/*6*/

        l6 = l3 * l3;
/*7*/

        $z0 = <Test1: boolean $assertionsDisabled>;
/*8*/

        if $z0 != 0 goto label1;
/*8*/

        $i0 = l4 + l5;
/*9*/

        if $i0 == l6 goto label1;
/*9*/

        $r0 = new java.lang.AssertionError;
/*9*/

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
/*9*/

        throw $r0;
/*9*/

     label1:
        return;
/*9*/
    }

/*2*/
    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z1_1, $z1_2;

        $r0 = class "Test1";
/*3*/

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
/*3*/

        if $z0 != 0 goto label1;
/*3*/

        $z1 = 1;
/*3*/

(0)     goto label2;
/*3*/

     label1:
(1)     $z1_1 = 0;
/*3*/

     label2:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        <Test1: boolean $assertionsDisabled> = $z1_2;
/*3*/

        return;
/*3*/
    }
}
